[{"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/index.js":"1","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/reportWebVitals.js":"2","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/App.js":"3","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/Routes.js":"4","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Login.js":"5","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/NotFound.js":"6","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Home.js":"7","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Signup.js":"8","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Theatres.js":"9","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Movies.js":"10","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Showtimes.js":"11","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Seats.js":"12","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Payment.js":"13","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Seats2.js":"14","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Account.js":"15","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/lib/contextLib.js":"16","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/AdminLogin.js":"17","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Admin.js":"18","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/AnnualFee.js":"19"},{"size":671,"mtime":1669936565736,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1669936565736,"results":"22","hashOfConfig":"21"},{"size":2166,"mtime":1670110795294,"results":"23","hashOfConfig":"21"},{"size":1795,"mtime":1670182154450,"results":"24","hashOfConfig":"21"},{"size":3398,"mtime":1670110468658,"results":"25","hashOfConfig":"21"},{"size":199,"mtime":1669936565735,"results":"26","hashOfConfig":"21"},{"size":304,"mtime":1669936565735,"results":"27","hashOfConfig":"21"},{"size":3740,"mtime":1669936565736,"results":"28","hashOfConfig":"21"},{"size":1285,"mtime":1670182454278,"results":"29","hashOfConfig":"21"},{"size":1689,"mtime":1670182772504,"results":"30","hashOfConfig":"21"},{"size":1938,"mtime":1670182831987,"results":"31","hashOfConfig":"21"},{"size":7059,"mtime":1670182884699,"results":"32","hashOfConfig":"21"},{"size":5861,"mtime":1670182535282,"results":"33","hashOfConfig":"21"},{"size":4804,"mtime":1670026326565,"results":"34","hashOfConfig":"21"},{"size":3668,"mtime":1670136739419,"results":"35","hashOfConfig":"21"},{"size":168,"mtime":1669936565736,"results":"36","hashOfConfig":"21"},{"size":3075,"mtime":1670131764533,"results":"37","hashOfConfig":"21"},{"size":5357,"mtime":1670131764533,"results":"38","hashOfConfig":"21"},{"size":3194,"mtime":1670182277250,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"kbvlaf",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"43"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/index.js",[],[],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/reportWebVitals.js",[],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/App.js",[],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/Routes.js",["105","106"],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Login.js",["107","108"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../lib/contextLib\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport \"./Login.css\";\nexport var userInfo = undefined;\n\nexport default function Login() {\n  const nav = useNavigate();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { userHasAuthenticated } = useAppContext();\n\n  const [userDB, setUserDB] = useState();\n\n  const errors = {\n    uname: \"invalid email address\",\n    pass: \"invalid password\"\n  };\n\n  useEffect(() => {\n\t\t// get registered users\n    fetch(\"http://localhost:8080/api/v1/registereduser/all\", {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setUserDB(data);\n        })\n        .catch(() => {\n          console.log(\"Error\");\n        });\n\t}, []);\n\n  const handleSubmit = (event) => {\n      //Prevent page reload\n      event.preventDefault();\n\n      var { uname, pass } = document.forms[0];\n\n      // Find user login info\n      const userData = userDB?.find((user) => user.email === uname.value);\n\n      // Compare user info\n      if (userData) {\n        if (userData.password !== pass.value) {\n          // Invalid password\n          setErrorMessages({ name: \"pass\", message: errors.pass });\n          console.log(\"Error. Invalid Password.\");\n        } else {\n          userInfo = userData;\n          setIsSubmitted(true);\n          userHasAuthenticated(true)\n          nav(\"/movie-ticket-system/theatres\");\n        }\n      } else {\n        // Email not found\n        setErrorMessages({ name: \"uname\", message: errors.uname });\n        console.log(\"Error. Invalid Email.\");\n      }\n  };\n\n  const guestHandle = (event) => {\n    event.preventDefault();\n    const uname = \"guest\";\n    const pass = \"guest\";\n    userInfo = userDB[0];\n    setIsSubmitted(true);\n    userHasAuthenticated(true)\n    nav(\"/movie-ticket-system/theatres\");\n};\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n  );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Email Address </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"input-container\">\n          <Link onClick={guestHandle}>\n            Continue as Guest\n          </Link>\n        </div>\n        <div className=\"button-container\">\n          <Button variant=\"contained\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      <div className=\"login-form\">\n        <div className=\"title\">Login</div>\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n      </div>\n    </div>\n  );\n}","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/NotFound.js",[],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Home.js",[],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Signup.js",["109","110","111"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../lib/contextLib\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport \"./Signup.css\";\n\nexport default function Signup() {\n  const nav = useNavigate();\n\n  // React States\n  const [isError, setIsError] = useState(false);\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { userHasAuthenticated } = useAppContext();\n\n  const [userDB, setUserDB] = useState();\n\n  const errors = {\n    uname: \"email address already exists\",\n    pass: \"invalid password\"\n  };\n\n  useEffect(() => {\n\t\t// get registered users\n    fetch(\"http://localhost:8080/api/v1/registereduser/all\", {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setUserDB(data);\n        })\n        .catch(() => {\n          console.log(\"Error\");\n        });\n\t}, []);\n\n  const handleSubmit = (event) => {\n      //Prevent page reload\n      event.preventDefault();\n\n      var { uname, pass, nme, addr } = document.forms[0];\n\n      // Find user login info\n      const userData = userDB?.find((user) => user.email === uname.value);\n\n      // Compare user info\n      if (userData) {\n        // Email found\n        setErrorMessages({ name: \"uname\", message: errors.uname });\n        console.log(\"Error. Email Address Exists.\");\n      } else {\n        // Email not found\n        const newUser = {\n          email: uname.value,\n          password: pass.value,\n          name: nme.value,\n          address: addr.value\n        };\n        console.log(newUser);\n        fetch(\"http://localhost:8080/api/v1/registereduser/add\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(newUser),\n        })\n          .then(() => {\n            console.log(newUser);\n            console.log(\"New User Added\");\n            setIsSubmitted(true);\n            setIsError(false);\n          })\n          .catch(() => {\n            console.log(\"Error\");\n            setIsError(true);\n            setIsSubmitted(false);\n          });\n      }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n  );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Email Address </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Name </label>\n          <input type=\"text\" name=\"nme\" required />\n          {renderErrorMessage(\"nme\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Address </label>\n          <input type=\"text\" name=\"addr\" required />\n          {renderErrorMessage(\"addr\")}\n        </div>\n        <div className=\"button-container\">\n        <Button variant=\"contained\" onClick={handleSubmit}>\n          Submit\n        </Button>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      <div className=\"login-form\">\n        <div className=\"title\">Sign Up</div>\n        {isSubmitted ? <div>You've successfully signed up! Please login.</div> : renderForm}\n      </div>\n    </div>\n  );\n}","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Theatres.js",["112","113","114","115"],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Movies.js",["116","117","118","119","120"],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Showtimes.js",["121","122","123","124","125","126","127","128","129","130","131"],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Seats.js",["132","133","134","135","136","137","138","139"],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Payment.js",["140"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { useState, useEffect } from 'react';\nimport { userInfo } from \"./Login.js\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nvar totalPrice = 0.00;\n\n\nexport default function Payment() {\n  const paperStyle = {padding:'50px 20px', width:600, margin:'20px auto'}\n  const [isError, setIsError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [cardNo,setCardNo] = useState('')\n  const [expiry,setExpiry] = useState('')\n  const [cvv,setCvv] = useState('')\n  const [name,setName] = useState('')\n  const [price,setPrice] = useState('')\n\n  const [tickets,setTickets] = useState([])\n  const [checked, setChecked] = useState([]);\n\n  function sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n    .then(res=>res.json())\n    .then(result=>{\n      setTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n    })\n  },[])\n\n  useEffect(()=>{\n    totalPrice = tickets.length * 10;\n    setPrice(totalPrice);\n    console.log(tickets.length);\n  },[tickets])\n\n  const handleClick=(e)=>{\n    e.preventDefault()\n    const creditCard={cardNo, expiry, cvv, name}\n    console.log(creditCard)\n    // TODO: send data to database\n    fetch(`http://localhost:8080/api/v1/payment/addPayment/${cardNo}/${price}`,\n        {\n          method:\"PUT\",\n          headers:{\"Content-Type\":\"application/json\"},\n          body:JSON.stringify(creditCard)\n        }).then(()=>{\n      console.log(\"Payment Successful\")\n      setIsSubmitted(true);\n      setIsError(false);\n    }).catch(()=>{\n      console.log(\"Error\")\n      setIsError(true);\n      setIsSubmitted(false);\n    })\n  }\n\n  const handleDelete = (e) => {\n    const id = [];\n    for (var i = 0; i < checked.length; i++) {\n      id.push(tickets[checked[i]].id);\n    }\n    console.log(id)\n\n    for (var i = 0; i < id.length; i++) {\n    fetch(\"http://localhost:8080/api/v1/ticket/delete/\"+id[i], {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n        .then(() => {\n          console.log(\"Ticket Deleted From User\");\n          setIsSubmitted(true);\n          setIsError(false);\n          fetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n            .then(res=>res.json())\n            .then(result=>{\n              setTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n              setChecked([]);\n            })\n        })\n        .catch(() => {\n          console.log(\"err2\");\n          setIsError(true);\n          setIsSubmitted(false);\n        })\n      }\n  };\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  return (\n    <Container>\n      <Paper elevation={3} style={paperStyle}>\n      <h1>Ticket Cart</h1>\n        {tickets.map((ticket,i) =>( \n          <ListItemButton role={undefined} onClick={handleToggle(i)} key={ticket.id} dense>\n            <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={checked.indexOf(i) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                />\n              </ListItemIcon>\n            <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}}>\n              ID:{ticket.id} <br></br>\n              Theatre:{ticket.theatre} <br></br>\n              Movie:{ticket.movie} <br></br>\n              Showtime:{ticket.showtime} <br></br>\n              Seat:{ticket.seatDesc}\n            </Paper>\n          </ListItemButton>\n          ))}\n          <br></br>\n          <Box textAlign='center'>\n            <Button variant=\"contained\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Box>\n      </Paper>\n\n      <Paper elevation={3} style={paperStyle}>\n        <h1>Payment</h1>\n        <p>Your total is ${totalPrice}.00</p>\n\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: 500, maxWidth: '100%' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField required id=\"outlined-required\" label=\"Credit Card Number\" variant=\"outlined\" fullWidth\n      value = {cardNo}\n      onChange={(e)=>setCardNo(e.target.value)}\n      />\n      <TextField required id=\"outlined-required\" label=\"Expiry Date (MM/YY)\" variant=\"outlined\" fullWidth\n      value = {expiry}\n      onChange={(e)=>setExpiry(e.target.value)}\n      />\n      <TextField required id=\"outlined-required\" label=\"CVV\" variant=\"outlined\" fullWidth\n      value = {cvv}\n      onChange={(e)=>setCvv(e.target.value)}\n      />\n      <TextField required id=\"outlined-required\" label=\"Cardholder Name\" variant=\"outlined\" fullWidth\n      value = {name}\n      onChange={(e)=>setName(e.target.value)}\n      />\n      \n      <Button variant=\"contained\" onClick={handleClick}>\n        Submit\n      </Button>\n    </Box>\n    </Paper>\n\n      <Paper elevation={3} style={paperStyle}>\n        <h1>Response</h1>\n        {isSubmitted ? <div>Payment Successful! Please check your email.</div> : \n                        <div></div>}\n        {isError ? <div>Error. Please try again.</div> : \n                        <div></div>}\n      </Paper>\n    </Container>\n  );\n}\n",[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Seats2.js",["141","142"],[],"import './Seats2.css'\nimport React, { useState } from 'react'\nimport clsx from 'clsx'\nimport Button from '@mui/material/Button';\nimport { useNavigate } from \"react-router-dom\";\nimport { theatreSelected } from \"./Theatres.js\";\nimport { movieSelected } from \"./Movies.js\";\nimport { stSelected } from \"./Showtimes.js\";\n\nconst s= 'test4'\nconst p=20.00\n\nconst movies = [\n  {\n    name: 'Avenger',\n    price: 10,\n    occupied: [20, 21, 30, 1, 2, 8],\n  },\n  {\n    name: 'Joker',\n    price: 12,\n    occupied: [9, 41, 35, 11, 65, 26],\n  },\n  {\n    name: 'Toy story',\n    price: 8,\n    occupied: [37, 25, 44, 13, 2, 3],\n  },\n  {\n    name: 'the lion king',\n    price: 9,\n    occupied: [10, 12, 50, 33, 28, 47],\n  },\n]\n\nconst seats = Array.from({ length: 8 * 8 }, (_, i) => i)\n\nexport default function Seats2() {\n    const nav = useNavigate();\n  const [selectedMovie, setSelectedMovie] = useState(movies[0])\n  const [selectedSeats, setSelectedSeats] = useState([])\n  const [isError, setIsError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleClick=(e)=>{\n    e.preventDefault()\n    const ticket={\n      theatre: theatreSelected.name, \n      movie: movieSelected.name, \n      showtime: stSelected.showtime, \n      seat: s, \n      price: p}\n    console.log(ticket)\n    // TODO: send data to database\n    fetch(\"http://localhost:8080/api/v1/ticket/add\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(ticket),\n        })\n          .then(() => {\n            console.log(ticket);\n            console.log(\"Ticket Created\");\n            setIsSubmitted(true);\n            setIsError(false);\n            nav(\"/movie-ticket-system/payment\");\n          })\n          .catch(() => {\n            console.log(\"Error\");\n            setIsError(true);\n            setIsSubmitted(false);\n          });\n  }\n\n  return (\n    <div className=\"App\">\n      <Movies\n        movie={selectedMovie}\n        onChange={movie => {\n          setSelectedSeats([])\n          setSelectedMovie(movie)\n        }}\n      />\n      <ShowCase />\n      <Cinema\n        movie={selectedMovie}\n        selectedSeats={selectedSeats}\n        onSelectedSeatsChange={selectedSeats => setSelectedSeats(selectedSeats)}\n      />\n\n      <p className=\"info\">\n        You have selected <span className=\"count\">{selectedSeats.length}</span>{' '}\n        seats for the price of{' '}\n        <span className=\"total\">\n          {selectedSeats.length * selectedMovie.price}$\n        </span>\n      </p>\n      <Button variant=\"contained\" onClick={handleClick}>\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nfunction Movies({ movie, onChange }) {\n  // return (\n  //   <div className=\"Movies\">\n  //     <label htmlFor=\"movie\">Pick a movie</label>\n  //     <select\n  //       id=\"movie\"\n  //       value={movie.name}\n  //       onChange={e => {\n  //         onChange(movies.find(movie => movie.name === e.target.value))\n  //       }}\n  //     >\n  //       {movies.map(movie => (\n  //         <option key={movie.name} value={movie.name}>\n  //           {movie.name} (${movie.price})\n  //         </option>\n  //       ))}\n  //     </select>\n  //   </div>\n  // )\n}\n\nfunction ShowCase() {\n  return (\n    <ul className=\"ShowCase\">\n      <li>\n        <span className=\"seat\" /> <small>N/A</small>\n      </li>\n      <li>\n        <span className=\"seat selected\" /> <small>Selected</small>\n      </li>\n      <li>\n        <span className=\"seat occupied\" /> <small>Occupied</small>\n      </li>\n    </ul>\n  )\n}\n\nfunction Cinema({ movie, selectedSeats, onSelectedSeatsChange }) {\n  function handleSelectedState(seat) {\n    const isSelected = selectedSeats.includes(seat)\n    if (isSelected) {\n      onSelectedSeatsChange(\n        selectedSeats.filter(selectedSeat => selectedSeat !== seat),\n      )\n    } else {\n      onSelectedSeatsChange([...selectedSeats, seat])\n    }\n  }\n\n  return (\n    <div className=\"Cinema\">\n      <div className=\"screen\" />\n\n      <div className=\"seats\">\n        {seats.map(seat => {\n          const isSelected = selectedSeats.includes(seat)\n          const isOccupied = movie.occupied.includes(seat)\n          return (\n            <span\n              tabIndex=\"0\"\n              key={seat}\n              className={clsx(\n                'seat',\n                isSelected && 'selected',\n                isOccupied && 'occupied',\n              )}\n              onClick={isOccupied ? null : () => handleSelectedState(seat)}\n              onKeyPress={\n                isOccupied\n                  ? null\n                  : e => {\n                      if (e.key === 'Enter') {\n                        handleSelectedState(seat)\n                      }\n                    }\n              }\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Account.js",["143","144","145","146","147","148"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { useState, useEffect } from \"react\";\nimport { flexbox } from \"@mui/system\";\nimport { userInfo } from \"./Login.js\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport { globalTickets } from \"./Payment.js\";\n\nexport default function Account() {\n\tconst [isError, setIsError] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [checked, setChecked] = useState([]);\n\tconst [tickets,setTickets] = useState([])\n\n\tconst paperStyle = {\n\t\tpadding: \"50px 20px\",\n\t\twidth: 600,\n\t\tmargin: \"20px auto\",\n\t};\n\n\tfunction sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\t\n\tuseEffect(()=>{\n\t\tfetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n\t\t.then(res=>res.json())\n\t\t.then(result=>{\n\t\t  setTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n\t\t})\n\t  },[])\n\n\tconst handleDelete = (e) => {\n\t\tconst id = [];\n\t\tfor (var i = 0; i < checked.length; i++) {\n\t\t\tid.push(tickets[checked[i]].id);\n\t\t}\n\t\tconsole.log(id)\n\n\t\tfor (var i = 0; i < id.length; i++) {\n\t\tfetch(\"http://localhost:8080/api/v1/ticket/delete/\"+id[i], {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" }\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(\"Ticket Deleted From User\");\n\t\t\t\tsetIsSubmitted(true);\n\t\t\t\tsetIsError(false);\n\t\t\t\tfetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n\t\t\t\t.then(res=>res.json())\n\t\t\t\t.then(result=>{\n\t\t\t\t\tsetTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n\t\t\t\t\tsetChecked([]);\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log(\"err2\");\n\t\t\t\tsetIsError(true);\n\t\t\t\tsetIsSubmitted(false);\n\t\t\t})\n\t\t\t}\n\t};\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\t\tif (currentIndex === -1) {\n\t\t  newChecked.push(value);\n\t\t} else {\n\t\t  newChecked.splice(currentIndex, 1);\n\t\t}\n\t\tsetChecked(newChecked);\n\t  };\n\n\treturn (\n\t\t<Container>\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Account Information</h1>\n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n\t\t\t\t\tID:{userInfo.id} <br></br>\n\t\t\t\t\tEmail Address:{userInfo.email} <br></br>\n\t\t\t\t\tPassword:{userInfo.password} <br></br>\n\t\t\t\t\tName:{userInfo.name} <br></br>\n\t\t\t\t\tAddress:{userInfo.address} <br></br>\n\t\t\t\t\tDate Registered:{userInfo.dateRegistered} <br></br>\n\t\t\t\t</Paper>\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Tickets</h1>\n\t\t\t{tickets.map((ticket,i) =>(\n\t\t\t\t<ListItemButton role={undefined} onClick={handleToggle(i)} dense>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t  edge=\"start\"\n\t\t\t\t\t  checked={checked.indexOf(i) !== -1}\n\t\t\t\t\t  tabIndex={-1}\n\t\t\t\t\t  disableRipple\n\t\t\t\t\t/>\n\t\t\t\t  </ListItemIcon>\n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} key={ticket.id}>\n\t\t\t\t\tID:{ticket.id} <br></br>\n\t\t\t\t\tTheatre:{ticket.theatre} <br></br>\n\t\t\t\t\tMovie:{ticket.movie} <br></br>\n\t\t\t\t\tShowtime:{ticket.showtime} <br></br>\n\t\t\t\t\tSeat:{ticket.seatDesc}\n\t\t\t\t</Paper>\n\t\t\t\t</ListItemButton>\n\t\t\t))}\n\t\t\t<br></br>\n          <Box textAlign='center'>\n            <Button variant=\"contained\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Box>\n\t\t\t</Paper>\n\t\t</Container>\n\t);\n}\n","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/lib/contextLib.js",[],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/AdminLogin.js",[],[],"/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/Admin.js",["149","150","151","152","153","154"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { useState, useEffect } from \"react\";\nimport { flexbox } from \"@mui/system\";\nimport { userInfo } from \"./AdminLogin.js\";\nimport { globalTickets } from \"./Payment.js\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Admin() {\n\n\tconst navigate = useNavigate()\n\n\tconst [movies,setMovies] = useState([])\n\tconst [staff,setStaff] = useState([])\n\tconst [users,setUsers] = useState([])\n\n\tconst [staffId,setStaffId] = useState([])\n\tconst [userId,setUserId] = useState([])\n\tconst [movieId,setMovieId] = useState([])\n\n\tconst [Name,setName] = useState([])\n\tconst [Email,setEmail] = useState([])\n\tconst [Password,setPassword] = useState([])\n\n\tconst paperStyle = {\n\t\tpadding: \"50px 20px\",\n\t\twidth: 600,\n\t\tmargin: \"20px auto\",\n\t};\n\n\tasync function getMovies() {\n\t\tconst response = await fetch(\"http://localhost:8080/api/v1/admin/allMovies\")\n        const data = await response.json()\n\t\tsetMovies(data)\n\t}\n\n\tasync function getStaff() {\n\t\tconst response = await fetch(\"http://localhost:8080/api/v1/admin/allStaff\")\n        const data = await response.json()\n\t\tsetStaff(data)\n\t}\n\n\tasync function getUsers() {\n\t\tconst response = await fetch(\"http://localhost:8080/api/v1/admin/allRegisteredUsers\")\n        const data = await response.json()\n\t\tsetUsers(data)\n\t}\n\n\tuseEffect(()=>{ \n\t\tgetMovies()\n\t\tgetStaff()\n\t\tgetUsers()\n\t  },[]);\n\n\n\tconst addStaff=(e)=>{e.preventDefault()\n\t\tvar result = {name: Name, email: Email, password: Password}\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(result)\n\t\t}\n\t\tfetch('http://localhost:8080/api/v1/admin/addAdminStaff', options)\n\t\t.then((response) => {\n\t\t\tconsole.log(response.data)\n\t\t\tdocument.getElementsByName('display')[0].value= response.data\n\t\t})\n\t}\n\t\n\tconst removeStaff=(e)=>{e.preventDefault()\n\t\tvar result = staff.find(item => item.id === Number(staffId));\n\t\tconst options = {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(result)\n\t\t}\n\t\tfetch('http://localhost:8080/api/v1/admin/removeAdminStaff', options)\n\t\t.then((response) => {\n\t\t\tdocument.getElementsByName('display')[0].value= response.data\n\t\t})\n\t}\n\n\n\tconst addUser=(e)=>{e.preventDefault()\n        // addCourse()\n    }\n\t\n\tconst removeUser=(e)=>{e.preventDefault()\n        // addCourse()\n    }\n\n\tconst addMovie=(e)=>{e.preventDefault()\n        // addCourse()\n    }\n\t\n\tconst removeMovie=(e)=>{e.preventDefault()\n        // addCourse()\n    }\n\n\treturn (\n\t\t<Container>\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Account Information</h1>\n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n\t\t\t\t\tId:{userInfo.id} <br></br>\n\t\t\t\t\tEmail Address:{userInfo.email} <br></br>\n\t\t\t\t\tPassword:{userInfo.password} <br></br>\n\t\t\t\t\tName:{userInfo.name} <br></br>\n\t\t\t\t</Paper>\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Movies</h1>\n\t\t\t{movies.map((movie) =>(\n        \n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} key={movie.mId}>\n\t\t\t\tId:{movie.mId} <br></br>\n\t\t\t\tMovie:{movie.name} <br></br>\n\t\t\t\t</Paper>\n\n\t\t\t))}\n\n\t\t\t<br/><br/>\n\t\t\t<input type=\"text\" placeholder=\"Movie Id\" \n            value={movieId} \n            onChange={(e)=>setMovieId(e.target.value)}/>\n\t\t\t<button onClick={addMovie} > Add Movie </button>\n\t\t\t<button onClick={removeMovie} > Remove Movie </button>\n\t\t\t<br/><br/>\n\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Staff</h1>\n\t\t\t{staff.map((staffMember) =>(\n        \n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} key={staffMember.id}>\n\t\t\t\tId:{staffMember.id} <br></br>\n\t\t\t\tName:{staffMember.name} <br></br>\n\t\t\t\t</Paper>\n\n\t\t\t))}\n\t\t\t\n\t\t\t<br/><br/>\n\t\t\t<input type=\"number\" placeholder=\"Staff Id\" \n            value={staffId} \n            onChange={(e)=>setStaffId(e.target.value)}/>\n\t\t\t<button onClick={removeStaff} > Remove Staff </button>\n\t\t\t<br/><br/>\n\n\t\t\t<input type=\"text\" placeholder=\"Name\" \n            value={Name}\n            onChange={(e)=>setName(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Email\" \n            value={Email}\n            onChange={(e)=>setEmail(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Password\" \n            value={Password}\n            onChange={(e)=>setPassword(e.target.value)}/>\n\n\t\t\t<button onClick={addStaff} > Add Staff </button>\n\t\t\t<br/><br/>\n\t\t\t<label htmlFor=\"displayValue\"> Output: </label>\n            <input type=\"textarea\" name=\"display\"></input>\n\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Registered Users</h1>\n\t\t\t{users.map((user) =>(\n        \n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} key={user.id}>\n\t\t\t\tId:{user.id} <br></br>\n\t\t\t\tName:{user.name} <br></br>\n\t\t\t\tEmail:{user.email} <br></br>\n\t\t\t\t</Paper>\n\n\t\t\t))}\n\n\t\t\t<br/><br/>\n\t\t\t<input type=\"text\" placeholder=\"User Id\" \n            value={userId} \n            onChange={(e)=>setUserId(e.target.value)}/>\n\t\t\t<button onClick={addUser} > Add User </button>\n\t\t\t<button onClick={removeUser} > Remove User </button>\n\t\t\t<br/><br/>\n\n\t\t\t</Paper>\n\n\t\t</Container>\n\t);\n}\n","/Users/justin/Desktop/MEng Repos/ENSF 614/movie-ticket-system/react-frontend/src/containers/AnnualFee.js",["155","156","157","158","159","160","161"],[],{"ruleId":"162","severity":1,"message":"163","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":12},{"ruleId":"162","severity":1,"message":"166","line":12,"column":8,"nodeType":"164","messageId":"165","endLine":12,"endColumn":14},{"ruleId":"162","severity":1,"message":"167","line":71,"column":11,"nodeType":"164","messageId":"165","endLine":71,"endColumn":16},{"ruleId":"162","severity":1,"message":"168","line":72,"column":11,"nodeType":"164","messageId":"165","endLine":72,"endColumn":15},{"ruleId":"162","severity":1,"message":"169","line":8,"column":9,"nodeType":"164","messageId":"165","endLine":8,"endColumn":12},{"ruleId":"162","severity":1,"message":"170","line":11,"column":10,"nodeType":"164","messageId":"165","endLine":11,"endColumn":17},{"ruleId":"162","severity":1,"message":"171","line":14,"column":11,"nodeType":"164","messageId":"165","endLine":14,"endColumn":31},{"ruleId":"162","severity":1,"message":"172","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":11},{"ruleId":"162","severity":1,"message":"173","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"174","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":14},{"ruleId":"162","severity":1,"message":"175","line":8,"column":16,"nodeType":"164","messageId":"165","endLine":8,"endColumn":35},{"ruleId":"162","severity":1,"message":"172","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":11},{"ruleId":"162","severity":1,"message":"173","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"174","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":14},{"ruleId":"162","severity":1,"message":"176","line":16,"column":10,"nodeType":"164","messageId":"165","endLine":16,"endColumn":13},{"ruleId":"162","severity":1,"message":"177","line":16,"column":14,"nodeType":"164","messageId":"165","endLine":16,"endColumn":20},{"ruleId":"162","severity":1,"message":"172","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":11},{"ruleId":"162","severity":1,"message":"173","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"174","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":14},{"ruleId":"162","severity":1,"message":"170","line":15,"column":10,"nodeType":"164","messageId":"165","endLine":15,"endColumn":17},{"ruleId":"162","severity":1,"message":"178","line":15,"column":19,"nodeType":"164","messageId":"165","endLine":15,"endColumn":29},{"ruleId":"162","severity":1,"message":"179","line":16,"column":10,"nodeType":"164","messageId":"165","endLine":16,"endColumn":21},{"ruleId":"162","severity":1,"message":"180","line":16,"column":23,"nodeType":"164","messageId":"165","endLine":16,"endColumn":37},{"ruleId":"162","severity":1,"message":"176","line":18,"column":10,"nodeType":"164","messageId":"165","endLine":18,"endColumn":13},{"ruleId":"162","severity":1,"message":"177","line":18,"column":14,"nodeType":"164","messageId":"165","endLine":18,"endColumn":20},{"ruleId":"162","severity":1,"message":"181","line":19,"column":10,"nodeType":"164","messageId":"165","endLine":19,"endColumn":13},{"ruleId":"162","severity":1,"message":"182","line":19,"column":14,"nodeType":"164","messageId":"165","endLine":19,"endColumn":20},{"ruleId":"162","severity":1,"message":"173","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"183","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":14},{"ruleId":"162","severity":1,"message":"184","line":24,"column":10,"nodeType":"164","messageId":"165","endLine":24,"endColumn":21},{"ruleId":"162","severity":1,"message":"185","line":24,"column":22,"nodeType":"164","messageId":"165","endLine":24,"endColumn":29},{"ruleId":"162","severity":1,"message":"170","line":26,"column":10,"nodeType":"164","messageId":"165","endLine":26,"endColumn":17},{"ruleId":"162","severity":1,"message":"179","line":27,"column":10,"nodeType":"164","messageId":"165","endLine":27,"endColumn":21},{"ruleId":"162","severity":1,"message":"186","line":29,"column":10,"nodeType":"164","messageId":"165","endLine":29,"endColumn":22},{"ruleId":"162","severity":1,"message":"187","line":29,"column":24,"nodeType":"164","messageId":"165","endLine":29,"endColumn":39},{"ruleId":"188","severity":1,"message":"189","line":78,"column":14,"nodeType":"164","messageId":"190","endLine":78,"endColumn":15},{"ruleId":"162","severity":1,"message":"170","line":42,"column":10,"nodeType":"164","messageId":"165","endLine":42,"endColumn":17},{"ruleId":"162","severity":1,"message":"179","line":43,"column":10,"nodeType":"164","messageId":"165","endLine":43,"endColumn":21},{"ruleId":"162","severity":1,"message":"173","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"191","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":17},{"ruleId":"162","severity":1,"message":"192","line":13,"column":10,"nodeType":"164","messageId":"165","endLine":13,"endColumn":23},{"ruleId":"162","severity":1,"message":"170","line":16,"column":9,"nodeType":"164","messageId":"165","endLine":16,"endColumn":16},{"ruleId":"162","severity":1,"message":"179","line":17,"column":9,"nodeType":"164","messageId":"165","endLine":17,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":50,"column":12,"nodeType":"164","messageId":"190","endLine":50,"endColumn":13},{"ruleId":"162","severity":1,"message":"172","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":11},{"ruleId":"162","severity":1,"message":"173","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"174","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":14},{"ruleId":"162","severity":1,"message":"191","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":17},{"ruleId":"162","severity":1,"message":"192","line":10,"column":10,"nodeType":"164","messageId":"165","endLine":10,"endColumn":23},{"ruleId":"162","severity":1,"message":"193","line":15,"column":8,"nodeType":"164","messageId":"165","endLine":15,"endColumn":16},{"ruleId":"162","severity":1,"message":"194","line":7,"column":20,"nodeType":"164","messageId":"165","endLine":7,"endColumn":29},{"ruleId":"162","severity":1,"message":"195","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":18},{"ruleId":"162","severity":1,"message":"196","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":22},{"ruleId":"162","severity":1,"message":"197","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":20},{"ruleId":"162","severity":1,"message":"198","line":11,"column":8,"nodeType":"164","messageId":"165","endLine":11,"endColumn":16},{"ruleId":"162","severity":1,"message":"199","line":23,"column":16,"nodeType":"164","messageId":"165","endLine":23,"endColumn":24},{"ruleId":"162","severity":1,"message":"200","line":25,"column":12,"nodeType":"164","messageId":"165","endLine":25,"endColumn":21},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Seats2' is defined but never used.","'uname' is assigned a value but never used.","'pass' is assigned a value but never used.","'nav' is assigned a value but never used.","'isError' is assigned a value but never used.","'userHasAuthenticated' is assigned a value but never used.","'Box' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'useLinkClickHandler' is defined but never used.","'tId' is assigned a value but never used.","'settId' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'mId' is assigned a value but never used.","'setmId' is assigned a value but never used.","'Link' is defined but never used.","'createdSeat' is assigned a value but never used.","'setSeat' is assigned a value but never used.","'isSubmitted3' is assigned a value but never used.","'setIsSubmitted3' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'flexbox' is defined but never used.","'globalTickets' is defined but never used.","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'userInfo' is defined but never used.","'ListItemButton' is defined but never used.","'ListItemIcon' is defined but never used.","'Checkbox' is defined but never used.","'setPrice' is assigned a value but never used.","'sortByKey' is defined but never used."]